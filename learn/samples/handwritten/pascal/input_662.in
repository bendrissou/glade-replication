unIT e ; TYpE C = recOrd END ; t = FunCtIon : d0 ; VZ = PrOCEdURE ( vAr n , LG1J , s_5 : iNteGeR ; FunCTioN u , ql : B6 ) ; TypE Q = pacKeD ArrAy [ ( qc , jJ , N ) ] Of arraY [ ( k , EnB ) ] oF ^ i ; A = ^ tC_w_ ; Var v : rECoRd END ; TYpE B = StRing [ 86763e3 ] ; I = pROCeDuRe ; begIN BEGIN ; Q eND ; X := nOt (. .) ; 0 : with it (. - TRUE mOD TrUe * niL MOD + [ ] .) (. - TRUE AND + NOt NOT (. .) - tRUe / P_4 + nk ^ . ezL6 ^ anD + [ ] - [ ] , - tRuE / - (. .) * truE OR - true - + nIL And (. .) <> + FaLSE * @ G . w . p ^ mOd - [ ] , - @ YwT_ <= + Not (. .) , - NOT T5 . lB . K_ ^ - '' > - [ ] * q ^ / (. .) > TRue / + (. .) > [ ] , + [ ] * + faLSE * [ ] aND + (. .) , nOt @ yI_ mod (. .) + (. .) * + nIl diV [ ] .) , @ J , @ Y8O__ (. Xb MOd true MOd + TruE < + (. .) - - @ s . h oR (. .) , + FAlSE aND - tRuE Mod + NiL + + fAlse = + [ ] / nil mOD - (. .) oR V ^ div [ ] .) , @ U (. + [ ] div + Q0 dIv TruE > + V_m <> [ ] aNd + (. .) .) ^ (. FaLSe OR - fAlsE oR (. .) oR + (. .) , - '[+' * TruE AnD + not [ ] diV (. .) - NOt [ ] , tRUE .) , @ V_doL ^ Do 93723 : WItH @ B_ ^ . e_ , ZZ Do 3 : GoTo 2 ; BegiN 154 : wItH @ Usl Do GOTo 69 ; wITH @ c_s8 . y_ ^ , @ B . E5_ . e5 ^ . A5 . p_G__ ^ dO End ; BEGIn 54 : gOTO 7 eND EnD . 