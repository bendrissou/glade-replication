return false , function ( ) function b3 . C ( ... ) goto be return ; end return end and { } .. false and false - { 1e+16867 , [ nil ] = false and ~ # # true & false ^ nil .. false - "6=" .. # ... * '' // false } and function ( ) end * nil or true and false / true , 5 , 0XAc >= nil ~= gGL ~= function ( ... ) return # false >> ... ; end > ~ function ( ... ) for g = false >= ... ^ # false and false or false ^ ... >> nil or { } .. nil ^ true <= nil and { } ^ false >> ... .. ... .. - nil ^ nil ^ true , 0x.b , b0 ( ) and false >> function ( ) end ^ nil ~= false // false * { } == ... == false or true ^ nil + nil and ( false ) do for L = { } .. true & true .. true .. false and ... // "5" , 0x0f , { } and true - true .. nil >> - false .. false do return end break repeat until { } and false .. ... - false - ... ^ # { } end return not ( false ) ( ) ( ) .. true end and 0x2 