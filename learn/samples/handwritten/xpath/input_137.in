- - - - - - ɴ : Ý ( ) - / + 'a=l' [ / + / <= / > / < / - / = / + / < / - / - / - / >= / - / = / > / + / + / + / = / - / < / - / + / <= / < / + / - / - / + / or / >= / and / ] / preceding :: * / @ text : * // following-sibling :: * - - $ child : self [ / <= / - / = / <= / <= / = / >= / or / - / - / = / - / - / + / > / + / - / >= / < / = / <= / - / + / + / <= / > / + / >= / + / >= / = / and / >= / + / and / < / <= / or / <= / = / + / + / + / + / or / + / <= / + / ] mod - processing-instruction ( "" ) - - - / | $ ô. : comment div / | processing-instruction ( '' ) / attribute :: comment ( ) mod / or - following :: ℣ : * / . // .. / ancestor-or-self :: _· : _ / preceding-sibling :: * // .. | / | / | / | / | / | "?S" // .. / .. + - . | / | / | / | / | / | 'e*"'' // . / .. * - .87 // . / preceding-sibling :: * * - / | / | / | .41 // descendant :: * | '`' / . + / >= - - - / | / | / .. / . != / div - // . >= / + // @ processing-instruction ( ) * / + / div - - - - - / | / | .. | / | / | '9' - / mod ancestor :: processing-instruction ( '0' ) / attribute :: comment ( ) | Ƀv͋3- ( ) + / div @ processing-instruction ( '' ) // parent :: node ( ) / @ comment ( ) / .. | / | .. | // .. // . / . | / | "k'" // .. // .. - - .. // @ processing-instruction ( '' ) * / div / + - $ preceding-sibling : processing-instruction / . / .. / child :: comment ( ) / following-sibling :: processing-instruction ( '%T' ) | . >= - - Ⴓ ( ) // self :: * // . // .. // following :: text : * | / | / | processing-instruction : node ( ) / .. // . | / | .. // . | 'T<' + / or - .. // @ * <= / div / != / div / mod - - "" // z. : * // processing-instruction ( ) / comment ( ) div / | / | / | '' mod - / | / | "F*&" / . != / or / mod / mod / and / mod / or / mod / - / mod / mod .7 * / >= - 605. [ / != / < / + / - / and / ] [ / != / - / >= / - / > / - / = / + / + / <= / - / ] // preceding-sibling :: node : * mod / | / | processing-instruction ( "7u_" ) // @ text ( ) // @ node ( ) | / | "" / . | "CA" // .. mod - - - / node ( ) - / mod - - / | / | / | / | / | "" div / div $ comment : comment < / mod / div - descendant :: * * - / | / | 1. * following ( ) >= / mod / | / . // self :: processing-instruction ( '' ) // following :: * | / | "" | / | '' // .. * / mod / | / | / | "" div - - - - - - - '' | .. | '' mod .. | '' * / = - $ namespace // . // .. | / | / descendant-or-self :: * * / div ancestor-or-self :: comment ( ) = / mod / | / | / | / | / | "n4R" + / mod - - - - / | / | '' / * | child ( ) > / div / | .5 >= / | / | comment ( ) - / - - 1 [ / = / > / <= / + / > / <= / < / - / and / >= / - / - / and / > / + / - / + / = / - / + / <= / < / - / + / >= / >= / >= / ] div / - - / ancestor-or-self :: text ( ) * / mod / | .. / . // . mod - 1.64 // @ processing-instruction ( '' ) / . / @ following : * <= - "&P|" [ / - / = / >= / or / - / - / > / < / != / + / - / or / >= / <= / - / and / >= / - / + / <= / and / = / - / and / != / - / - / ] [ / - / = / <= / <= / - / + / != / - / - / - / - / <= / and / - / - / + / and / + / < / = / = / + / + / - / + / - / - / + / and / + / and / - / and / - / + / - / - / or / >= / <= / or / <= / > / < / <= / - / + / + / and / = / < / - / and / - / > / - / + / - / + / < / != / + / + / = / - / <= / + / + / > / - / - / != / - / < / + / < / + / = / != / - / - / - / - / - / - / + / != / - / + / ] | ﶾ : 鶊-‿ͥ ( ) / namespace :: ﻫ : * // .. / . // preceding :: following : * > - - / | 'tic8Q' // . // @ text ( ) // node ( ) / @ * // @ processing-instruction ( '' ) <= / | / | / | '' / .. // @ node ( ) mod / | ancestor :: processing-instruction ( ) // descendant :: processing-instruction ( ) / parent :: node ( ) >= / | .006 | / | / | // . // . + . // . * - - preceding-sibling ( ) - / >= / + - - / | / | / | "" / @ processing-instruction ( "l" ) // .. >= / < - - - - - - - 'UmTg' * - / child :: comment ( ) / .. / following :: processing-instruction ( 'b:' ) // .. / namespace :: processing-instruction ( 'i' ) * / - / + / mod / mod / mod - - - / | / | .. | '' mod / | / | "" div / and / div / mod following-sibling : processing-instruction ( ) / self :: processing-instruction ( "s" ) // preceding :: descendant-or-self : self / . / . | / | preceding ( ) / .. / . mod .. // . / @ * div / mod / mod '{c!' // .. // . + - - - - - / | / | ₖ.2̻‿.‿·͕5· : following ( ) // @ processing-instruction : node - - - / | $ 흩뚄3 : following-sibling | / | / | / .. = / mod / - / > / + . | / | / @ processing-instruction ( ) / @ * | / | / | .. | "" / .. // . // . * - - - - - - '6' | .. / .. // descendant-or-self :: processing-instruction ( '%do' ) // parent :: processing-instruction ( '' ) | / | // . // . // . // . / .. / .. // .. / .. | "4" * / - / div / < - / | / | preceding :: node : * // . / text ( ) // preceding :: * | // .. / ancestor-or-self :: comment ( ) / @ processing-instruction ( '' ) > - $ ﻈ- : ancestor-or-self [ / - / < / > / = / = / > / - / - / >= / < / - / - / - / = / + / - / - / < / - / >= / >= / + / = / - / + / + / = / or / - / and / <= / - / - / + / - / + / or / = / - / > / or / != / < / and / + / <= / != / != / != / + / != / - / + / - / = / + / - / - / or / - / - / < / = / != / <= / <= / >= / + / - / and / <= / <= / - / > / > / < / - / and / - / < / <= / + / <= / and / + / != / + / + / + / > / >= / > / >= / - / - / - / + / - / - / or / + / != / - / != / + / - / < / > / > / > / > / - / - / ] + / > - - / | 5 | / | Ĉ ( ) - $ node | / | 'q' // . <= / or ancestor ( ) div - - 祈. ( ) | / | ']' // .. // self :: processing-instruction ( "r" ) div / div / | following-sibling ( ) // . | / | "C" // . != / >= // .. | / | processing-instruction ( "" ) | / | / | "" // . // . | '' != / | / | / | 52 | / | 527 | '' / . + / mod .. / descendant :: comment ( ) | / | / | / .. + - / | / | . // . or / mod - // . // @ * | / | / | / | "" | "YE)O" * / div - .. / . // * + / div / | / | '' / preceding-sibling :: * / @ text ( ) | 2 mod - - / | "A" // child :: comment ( ) | / | .. | "W" * $ processing-instruction : preceding | / | "" | "T" / . - / . // following :: processing-instruction ( "BY{" ) | "" = / | text : text ( ) / . | 'o' / .. / @ processing-instruction ( '' ) // .. * / <= / + / < / + - / | / | $ ｉ / .. // .. | / | / | / | '' - 7. / ancestor-or-self :: text ( ) // following-sibling :: processing-instruction ( "" ) / descendant-or-self : * - - / | / | $ text : child / child :: processing-instruction ( ) 