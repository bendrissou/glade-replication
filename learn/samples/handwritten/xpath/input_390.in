- - - - - - - - - "" [ / + / - / - / > / < / <= / - / + / >= / + / != / != / + / - / + / - / - / + / != / ] [ / + / - / - / and / or / + / + / - / + / + / + / + / + / = / + / - / + / and / - / = / != / >= / - / >= / + / < / ] [ / - / - / + / + / != / <= / = / >= / + / - / and / - / - / <= / - / - / >= / + / + / >= / > / <= / < / <= / - / + / - / + / = / + / < / > / > / >= / - / >= / - / + / + / - / - / > / > / < / + / < / ] [ / > / - / = / != / != / or / - / - / + / != / - / - / + / < / + / >= / + / and / - / + / > / - / <= / - / - / >= / or / - / = / <= / < / >= / <= / + / < / + / > / + / = / != / = / = / + / + / - / + / - / and / + / or / < / - / = / + / <= / or / <= / + / <= / <= / > / >= / + / + / >= / - / - / + / < / >= / = / - / - / - / + / - / + / - / < / >= / - / != / - / > / + / = / + / + / or / > / - / + / + / ] | $ descendant-or-self : comment | / | // . | / | / | '' mod / + / | . // descendant-or-self :: node : following // .. // processing-instruction ( '' ) >= / | 'Hb' * - - - / ancestor-or-self :: * / namespace :: processing-instruction ( "" ) * / mod / + / 