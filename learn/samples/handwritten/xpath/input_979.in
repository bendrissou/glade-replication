- - - - - - - $ preceding-sibling : text * ‌ ( ) | self :: processing-instruction ( "" ) * / mod - / | processing-instruction ( 'MDx' ) / @ node ( ) | / | "" > ancestor :: processing-instruction ( '/' ) | attribute ( ) mod - - - - - - - - "" div / < - - . // .. / preceding-sibling :: _ⱴ̶̵.ｐáÞ : * | $ child : descendant-or-self >= - / | / | / | . // . / node ( ) / @ processing-instruction ( "X" ) / @ * | // . | "" - - - - / . / . | .. // @ processing-instruction ( '!' ) div / | / | * / .. / .. / namespace :: * != - - / | .. | / | / | / | "tc5" | '' + / div - - / preceding :: namespace : * // . | / | "*" div / > - / | / | / | / | / | / | "" / .. / .. / .. > // ancestor :: node ( ) / . | / | U˽ ( ) / ancestor : * // .. // . | / | / | .. | "" / . + parent :: * mod / mod - - // . mod ಆ ( ) // .. | / | .4 * / mod "~" // ancestor :: processing-instruction ( '' ) | '' / . + / | / | ﮝ- : Ⲏ·‿ ( ) // .. | descendant-or-self :: processing-instruction ( "" ) * - '' / .. // . / . | / | descendant ( ) | / .. // .. | / | '' - - - . / processing-instruction ( "" ) | "YP" / @ processing-instruction ( "d <" ) + / | / | / preceding-sibling :: processing-instruction ( 'Z' ) * / div - / . / processing-instruction ( '' ) mod / > // .. / ancestor :: node : following-sibling / . mod / - / + - ( / <= / != / or / - / - / - / != / or / = / - / - / <= / - / = / + / - / ) [ / - / + / - / - / + / - / - / >= / and / + / - / ] * / 