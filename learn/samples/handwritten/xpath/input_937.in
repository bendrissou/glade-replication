/ - - .. / .. // . | child :: processing-instruction ( '(_a~U' ) | $ ɳ· : descendant-or-self - - / | ‌Þ ( ) // .. // . | / | .. / attribute :: processing-instruction ( '>' ) / preceding-sibling :: * // . // . - / mod 'D' / ＼｜· : * / .. div ⺭̇-· ( ) | / | "l" // .. / . | / | "" mod - - / | // . mod - / | / | '' mod - "" | "" mod - "" / .. // . - / div - / | / | / | @ * // . * / div / mod / = / div / or - 'q' | "" // .. // .. < / | / | . // .. / node ( ) >= / mod / mod - - / | / | / | / | "K" mod / processing-instruction ( '?x' ) / .. // .. | parent ( ) | .. | '' // . div / + / mod - - - 8. | / | / * / .. | .. / preceding :: * // @ * / .. div / - / + / | @ processing-instruction ( "J" ) | // . / .. | / | .. / . - / mod / | _ ( ) // .. // descendant-or-self :: node ( ) <= - - 'E' | // .. or '' [ / + / - / >= / and / != / ] [ / != / > / + / and / and / ] [ / or / <= / >= / - / >= / >= / + / - / <= / + / - / - / = / <= / > / + / + / >= / + / - / + / + / <= / >= / < / < / + / < / - / and / - / + / ] [ / ] | / | / | / | / | / | "" div / mod - - / | "" | parent :: * // @ * | / | '' = / div / div / following-sibling :: processing-instruction ( "z" ) / . // .. | .. | / | / | "" div / mod / div - / | "q" <= / div / 