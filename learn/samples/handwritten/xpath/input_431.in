/ - / | .. | / | / descendant :: text ( ) / . / @ text ( ) // following-sibling :: * / .. // processing-instruction ( '' ) // @ * / @ comment ( ) / . | / | "" | "]AP&" mod / + / + - - - _ : node * - - / | / | / | / | / | '--' < / mod - ''' <= / node : * != - / | $ namespace * / | / | $ node != / | namespace | ancestor ( ) / .. / . / .. // @ text : * div - / | / | / | / | / | "k" - / < / mod - / | @ text ( ) / .. <= / - - - - - / | / | .8 // preceding :: ᩢ.͡ : * // @ processing-instruction ( "" ) * / | $ attribute : preceding-sibling < - / | .293319 + - - "" // .. / text ( ) // @ attribute : * mod - - - - "" | / | .0 | / | . div / | / .. / .. | 9 <= / = / + $ v : ancestor-or-self + - - .. | / | processing-instruction ( 'Ie' ) | / | .5 / . // .. and / mod / - / div 'v~A_' / processing-instruction ( "" ) // . // preceding :: processing-instruction ( '' ) // .. mod / | $ comment : descendant | // . / .. / .. / . / .. / . / .. | / | "D" / .. / . * / = namespace :: * / .. | / | / .. // ancestor-or-self :: processing-instruction ( ":K" ) | / | / | "_Q^!*" div / - / | . | 毑.̨﬊ ( ) | $ text | / | / | 'x' mod / mod / mod / | / | / | "T" * - - - - - / | / | '&}' != / div / | / | / | "K" // .. | . / . // . + - - - / | .. / . * / = / div - // ancestor :: * / @ text ( ) / . | .7 // descendant :: comment ( ) | $ descendant : comment | / | / | "&,g*" * // preceding-sibling :: * // .. // @ text ( ) / . | .. // parent :: comment ( ) | / | "" mod - - // . | / | / | "'J" / .. div / mod / mod "" mod / div / + / - / mod - / | // following :: * | / | @ processing-instruction ( '' ) | / | 'b' // . - / mod / | / | / | / | 'v' // .. / .. / .. or / mod / div - - - / | / | / | / | "" / . - 51 - - - / | / | .7 - / + / div / > / div / != / mod / mod - - - $ _· // .. | descendant ( ) * @ processing-instruction ( "[^Nc" ) // ancestor-or-self :: * // . + 0. * - - / preceding :: processing-instruction ( '^}' ) | // namespace :: processing-instruction ( '*' ) | // descendant-or-self :: processing-instruction ( '' ) // parent :: processing-instruction ( '' ) // .. // ancestor :: * // namespace :: * // . | "" - / | // . | / | / | / | / | "" // . mod - - - . / * mod - - - - // @ text ( ) // @ * div / mod / mod / div / div / + / div - - / | / | / | ")W" / preceding-sibling :: processing-instruction ( "" ) = / div . | . | '' | / .. / . | . // .. <= / mod / 