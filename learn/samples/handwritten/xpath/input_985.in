/ | / | / | ''' // . | / | "" | "" div / mod // ancestor-or-self :: * < - / | $ å· : descendant * / div / .. / @ processing-instruction ( ) / self :: processing-instruction ( '' ) // .. // @ processing-instruction ( '' ) / self :: processing-instruction ( "E" ) / @ * / . // .. mod / | / | .. / .. / .. | 'DhzS' div - / | / | '' - / mod $ ancestor-or-self : text div / != - / | / | // .. | .. / child :: processing-instruction ( 'EI2' ) | / | .5 | 'S' = "" | / | / .. // .. / @ processing-instruction ( '' ) // . | .. + 487100822.713328 | // . * / | / | / | .. + / mod / - - / | '' | / | .4 // . // processing-instruction ( "S" ) * / | / | 7919.87820 | 8.3 > / + / > $ 秺 : node / .. mod / = / | / | / | / | / | .. - - - ( / > / != / < / = / < / > / + / <= / - / >= / - / + / or / - / > / and / - / + / + / != / = / - / and / + / != / - / >= / - / + / - / and / > / ) [ / - / = / + / >= / + / > / + / >= / and / + / <= / > / ] // . // .. // ancestor-or-self :: processing-instruction ( 't7r' ) / @ processing-instruction ( "" ) | / | 60. // .. / comment ( ) // processing-instruction ( ) / namespace :: text : text mod - - @ text ( ) | / | $ node | // .. // . / .. // .. // . >= / + / | / | / | / | / | / | '#' // .. + / - - - / | / | / | / | 488077. // @ * | / | "~" >= / <= / - / - / | .6 // .. | / | / | / | .. / .. // . / .. >= / div / | 罒.‿ : processing-instruction ( ) / @ * / . // ancestor :: following | / | / | '' / following-sibling :: * / processing-instruction ( '' ) = - - - / ancestor-or-self :: processing-instruction ( '' ) // .. / parent :: processing-instruction ( '7' ) // following-sibling :: ancestor-or-self / following :: text : namespace / node / .. | / | / | // comment ( ) / .. div / - - / | / | "y" | / | .. | "h" / processing-instruction ( ) | "" // . div / . // . + - - / | / | / | .. / processing-instruction ( "" ) = / mod - - / | // .. - / div / | / | $ comment / . / attribute :: processing-instruction ( ) // namespace :: processing-instruction ( "B" ) // .. / self : * | 1 | .. | "1x'" div // @ * / .. > - - - $ Ä : ￳ // .. / @ comment : * // comment ( ) // child :: * | / .. != - / | descendant :: processing-instruction ( "" ) // . = / mod / div / - / - / mod / | / | ancestor-or-self ( ) | / .. | 'T' | "Q-" / .. / .. mod - - parent :: processing-instruction ( ) / @ processing-instruction ( ) mod / | / | / | '' + - - / | / | / @ processing-instruction ( "" ) / . | parent : namespace ( ) // . / self :: node ( ) * / div / 