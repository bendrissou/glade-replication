21. / descendant :: * != / or / mod / | Tﻩ ( ) // @ text ( ) < - / | / | .. // @ processing-instruction ( 'l' ) div / div / mod / div / mod / and - - / | .. / .. div / div / | / | / | . / . // . // . / .. | "" / . / . // . / . // .. >= / + / > / . mod node : ⰻ0 ( ) // ancestor-or-self :: text ( ) / .. // following :: text // . // ancestor-or-self :: * // ancestor :: * // .. | .2 // . // .. - / | / | / | / @ processing-instruction ( "" ) // @ * | / | "Y\3" | '' - / mod - - / | 1.2 / @ processing-instruction ( '' ) // .. 