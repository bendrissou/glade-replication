/ < / div 0.88 // . * / <= 'YJ' [ / - / - / >= / and / + / + / - / - / + / - / + / - / + / and / - / and / + / = / + / and / + / + / = / + / - / + / ] [ / and / - / - / + / + / and / + / - / - / - / - / + / + / < / - / >= / = / - / - / < / + / - / - / = / + / and / - / - / + / - / + / - / > / - / + / - / > / - / >= / - / + / < / < / and / <= / = / <= / + / + / >= / = / - / = / + / < / - / >= / + / <= / - / - / + / - / - / >= / < / and / - / - / - / >= / >= / - / - / + / > / > / - / = / - / != / - / >= / - / < / > / - / + / < / <= / - / + / + / = / - / - / <= / < / - / <= / - / >= / - / = / = / != / - / or / - / - / - / - / = / > / + / > / = / - / + / - / <= / < / and / > / + / != / - / or / <= / or / = / - / + / + / < / + / + / <= / != / < / and / - / > / > / + / <= / + / - / + / - / and / + / - / - / = / + / >= / and / >= / + / + / + / >= / >= / + / < / + / and / = / + / or / = / and / = / < / - / - / >= / or / + / + / != / != / <= / <= / - / > / != / >= / and / + / - / - / + / - / - / != / < / - / < / - / != / >= / = / - / >= / + / - / < / - / - / - / = / and / != / + / = / - / - / + / = / <= / ] [ / - / and / + / = / and / - / + / - / = / - / and / >= / != / - / - / + / < / - / - / = / + / >= / + / - / + / - / + / + / < / and / > / > / <= / + / + / <= / + / and / = / < / ] [ / - / = / <= / + / > / >= / + / - / and / < / > / > / >= / + / + / ] [ / ] / following :: processing-instruction ( " 1" ) // * / preceding-sibling :: node ( ) | / | .5 * - .. / @ text ( ) | / | "" // . / descendant-or-self :: comment ( ) / . / .. * / | .. | / | . * "BU" / @ comment ( ) | / | 'w' / . // @ * | "" // .. / . * / - - - / | / | .4 div - - / | / | / | / . // .. + / | / . / self :: descendant-or-self : * / . + / > / ancestor-or-self :: node : * // . // . // descendant :: node ( ) / . | @ ｌ : * // . / . * - - / | ‌· ( ) / . / . <= - node : attribute ( ) [ / - / <= / = / != / ] / .. | .. // self :: * / . // comment ( ) mod - / preceding :: processing-instruction ( ',9' ) / parent :: * = / | processing-instruction ( "" ) | / | $ comment / .. / .. // .. | / | / | "" + / + / <= .. / .. != / | $ comment : C mod / + / mod - - / | / | / | / .. / .. / .. * - - - - - - @ processing-instruction ( "" ) // . // self :: processing-instruction ( "" ) // * // namespace :: comment : * div / | "`X=E" <= / div / div / <= / | / | namespace ( ) div '' | '' / .. * / div / mod - / . // . / . | / | "?" mod - - 7 mod / mod / < / > / = / - / mod - - - - - - - 'R' // . | / | / | preceding-sibling ( ) | / | "" // .. < / mod - - . // . // . mod / < - following-sibling :: processing-instruction ( ':/' ) / following-sibling :: * | / | 'C' div - / | $ child : preceding / . | / | .. mod / - / 