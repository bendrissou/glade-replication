/ mod / - parent ( ) // . // . mod // @ node ( ) // parent :: processing-instruction ( "m" ) // . * / div / div / + / | text ( ) | / | / | // .. = / | / .. div - / | . != '<Ok' / .. / self :: ‌. : * / . | / | ancestor-or-self :: ancestor-or-self : * | / | / | . // .. / .. // .. | 'H' - / != / | // text : * div / div @ processing-instruction ( '2' ) // .. - - - / . + - - ( / + / <= / - / - / != / < / < / > / >= / = / ) [ / and / - / >= / - / and / <= / + / - / + / - / and / >= / - / - / >= / - / + / - / - / - / or / + / <= / - / + / or / >= / - / > / = / ] [ / + / or / - / <= / > / or / - / + / + / + / + / + / != / + / < / <= / < / <= / + / - / - / >= / - / + / = / - / + / and / > / + / - / >= / and / - / = / <= / - / + / - / + / > / != / + / > / and / != / + / = / + / + / > / ] [ / - / < / + / != / ] [ / + / + / + / + / + / + / != / ] + / | ﶣ̂· ( ) / @ processing-instruction ( "O" ) * / mod / | $ node // . | / | 83060 / * // @ text ( ) / namespace :: processing-instruction ( '' ) | "" / . / . or / div / processing-instruction ( "mN+-" ) mod following-sibling ( ) / comment ( ) | / | / .. / . // .. or - - - - / .. mod / < / div - - - / descendant :: * // .. / .. div / mod - // .. | attribute ( ) | / | '' mod / | / | ',u3' / . / .. < / mod / = / div '' / parent :: descendant : * > / <= / mod / = / >= / mod / mod / 