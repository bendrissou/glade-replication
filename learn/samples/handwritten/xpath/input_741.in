'' [ / - / <= / ] [ / - / or / + / < / - / - / and / = / >= / >= / + / - / and / + / + / + / + / + / and / >= / - / + / - / >= / >= / <= / - / = / + / + / >= / + / + / - / - / and / - / and / + / != / - / + / <= / + / = / - / > / and / + / <= / - / + / + / + / = / - / < / <= / - / - / - / + / ] [ / != / - / = / - / + / - / - / + / - / > / - / >= / + / - / + / or / + / + / <= / + / <= / and / != / ] // . / .. + - - - - text : following ( ) | 'H' // . div / div // processing-instruction ( '' ) // . // . / @ processing-instruction ( ">" ) / . / processing-instruction ( "" ) / . // . / .. + / @ comment ( ) / namespace :: attribute : * / child :: node - / mod - - . + / - / div - - / | .. / @ * // .. >= / | / | / | / | / | / | '=#' / . / .. / . div / + / | / @ node ( ) | / | / | descendant-or-self ( ) mod / div / . div / mod - 8 | / | '' - .85 // processing-instruction ( "9" ) - . / .. mod // . / processing-instruction ( '' ) / @ processing-instruction ( "" ) / . // preceding-sibling :: node ( ) / .. // . // processing-instruction ( '' ) | / | / | / | . and / - / div / div / div - - / | // . / .. | / | "" / . / . / . div / mod / = / < - - . // .. // . / processing-instruction ( '&&0}D' ) // . // @ comment : node * / mod / | / . | / | / | 'o*' // . / . / .. - / | / | 5. / .. // . / .. / . mod / .. // processing-instruction ( "5" ) mod / >= / != / and - - / text ( ) | / . // .. // processing-instruction ( '' ) // @ comment ( ) // namespace :: self : * / @ processing-instruction ( "" ) / parent :: * // . | '' * / div / mod - - - - - - - . * / 