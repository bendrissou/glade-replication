/ | / processing-instruction ( '' ) / following-sibling :: processing-instruction ( '5' ) * / | / .. * / >= - / | / . / * // following :: comment ( ) | $ text : attribute // descendant :: processing-instruction ( "9" ) / following-sibling :: processing-instruction ( '' ) and // . | / | descendant-or-self :: processing-instruction ( '' ) // . <= / mod / div - $ z * - - - - - - $ node : comment / . // .. mod / div / mod - - - - - - 'xm'' // . > @ comment ( ) + / | .59 / processing-instruction ( "u" ) / .. / .. // descendant :: processing-instruction ( '' ) // @ processing-instruction ( '' ) * / div / and // .. / descendant-or-self :: namespace : * // @ j : * | / | / | $ comment / .. // .. // comment : * | ancestor-or-self :: * / processing-instruction ( ) | '' / descendant :: processing-instruction ( '' ) / . / . // following-sibling :: processing-instruction ( 'F' ) // descendant :: * // . - / >= / div / mod / + - / | / | / | / | attribute ( ) | / | 'b' // . / .. // . * / + - descendant ( ) [ / - / - / - / + / + / <= / <= / = / = / + / != / + / ] + / - / mod - - - - // . // .. | / | . / . * / < / - - - self ( ) [ / + / - / or / >= / > / + / or / <= / - / + / and / != / + / or / - / or / - / + / and / - / and / < / - / and / or / - / >= / or / and / - / - / - / - / = / - / + / - / + / <= / + / or / - / != / - / + / + / - / - / - / + / - / = / != / >= / = / - / + / - / ] * - .69 | "" | '' + / | "" - - - .2908 [ / + / < / >= / = / - / - / - / <= / > / - / - / - / and / - / <= / - / - / - / + / - / - / - / - / ] // self :: processing-instruction ( '' ) / @ processing-instruction ( ',pGU' ) // namespace :: comment ( ) | $ node : following / attribute :: text ( ) | .6758 / processing-instruction ( 'lj' ) + - // .. // ancestor :: self : * / namespace :: processing-instruction ( "" ) | ancestor : * | / | / | / | / | "+[H" // .. * - - - - / | / | / | / | / | 'yuQrn1' * / = / div - - / | / | Qâ€¿ ( ) // . // . - - - - / | // . / .. / . < - .. / @ processing-instruction ( "tq" ) != / | / | following :: processing-instruction ( "," ) / self :: text ( ) mod 7 | / . / preceding :: processing-instruction ( "L" ) / following-sibling :: * / text ( ) | / | / | / | ">" // . // . div - / | $ processing-instruction : node / . | '' / .. / ancestor :: * | '.' / descendant-or-self :: processing-instruction ( '' ) // .. + / self :: processing-instruction ( "" ) / . > / | .. | // @ processing-instruction ( "Lg" ) // * | / | 5. / following :: text ( ) / .. + / div / div / div 2.60634 / .. // .. / . // preceding-sibling :: processing-instruction ( '' ) | .4 // .. | .. 