- / | / | / | / | . // node ( ) | / | ' 1' div / mod / mod '' / . / processing-instruction ( '' ) * / + / mod / mod - - - / | / | / | / | "5$5(" * - / | / | / | "f" > - - - / | / | / | / | / | / | "" * / . | / | / | processing-instruction ( '' ) / .. / .. // . / parent :: processing-instruction ( "" ) | . | "D''_" / .. // . mod / mod / - - - - - - "" [ / - / or / - / < / >= / > / - / != / + / + / - / or / + / and / != / > / + / != / <= / != / + / + / >= / - / and / <= / and / < / - / + / < / + / != / - / < / + / != / - / + / <= / = / - / - / > / and / + / - / < / + / - / ] [ / = / and / + / > / >= / + / <= / or / <= / + / > / + / + / - / + / + / or / != / - / != / + / + / = / or / + / ] - / mod / div / | child ( ) / processing-instruction ( '' ) | / .. / .. / . | '' mod / | 6 | 5 // text ( ) / .. // .. / .. / .. mod / = / | "&\" * / - - / | descendant : preceding-sibling ( ) * / div - // . | / | .17 | / | 'Z' * . | / | .. != / - / | $ node | .. < / mod / - / mod / - / div / div / mod $ following // descendant :: comment ( ) + processing-instruction ( "s" ) | // .. / . | / | // following :: processing-instruction ( '' ) // descendant :: processing-instruction ( "6C" ) | / | / | '' mod - - / | text ( ) // namespace :: processing-instruction ( '^#?' ) // . mod / - - - - - / | / | / | / | / | .4 | '?jr' 