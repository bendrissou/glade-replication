( / + / != / and / + / + / + / >= / + / or / <= / + / - / - / != / > / + / = / - / - / - / <= / - / != / + / = / - / != / + / and / != / - / - / - / <= / + / + / or / < / = / + / - / + / <= / != / <= / + / != / >= / = / + / - / + / >= / > / = / or / <= / + / + / > / + / + / > / ) [ / + / != / > / + / - / and / or / - / > / ] - / mod / mod / mod / | namespace :: processing-instruction ( 'f' ) // @ * | / | '!'5' // . / .. - / <= / mod / != attribute ( ) mod / | / | // parent :: processing-instruction ( ) - / | $ text : text | . // .. = / | / | / .. // .. / . // . | / | / | 51. mod - - ᄁ : ‌ ( ) | "9" | / | 15 // . mod / > / + / mod / = / | ﮶͔ ( ) // .. / .. - / + / | / | / | / | .. / descendant-or-self :: * | / | "-h" + - . / . // . // .. // .. | / | / | / | "J(Ez" // .. < / mod / + / div / mod / div - / | / | '_n' / . / * // . / @ node ( ) | '' // .. = / div / + / < / = / | $ preceding | 'm' mod / | / | / | / | . | "Nf@*W!" * / | // descendant-or-self :: * <= - / | .. | / . | ୩‿̓ ( ) | / | / | "" div / + / | $ text : parent // .. / .. | / | $ node : following-sibling // attribute :: node : * // @ processing-instruction ( "" ) / ancestor-or-self :: processing-instruction ( "df7" ) - / div .. // @ comment ( ) | / | / | / | / | '' - - / | 493 | / | 'm5D' // .. // @ processing-instruction ( 'p;HDv' ) / self :: comment ( ) / ancestor-or-self :: processing-instruction ( "" ) = / | // descendant :: processing-instruction ( 'x' ) mod "Jd" / processing-instruction ( "" ) / . div $ comment : Ɏ·ͤ· / ancestor-or-self :: processing-instruction ( ) / . // .. / @ * >= - / . <= / = / - - - / | / . // .. / processing-instruction ( 'U]4' ) | / | $ preceding : child / descendant-or-self :: * // .. * / <= - - / | / | "" - - - - / processing-instruction ( '' ) / .. // ancestor-or-self :: node : * | descendant-or-self : text ( ) | / | 63. | ancestor ( ) mod - / | . / @ comment ( ) // . // . mod - - / ancestor :: * | / | "g(" * / + / > / and / | // . // .. // @ ancestor-or-self : * / following :: processing-instruction ( '' ) / .. / .. // .. / following-sibling :: processing-instruction ( ) / descendant-or-self :: text ( ) | '' // ancestor :: preceding : * | "~J" | 26.8 / @ * - - - - - / | $ following : parent / * + / mod - - 'H' | 92.3 // .. // processing-instruction ( 'K' ) - @ node : * // self : * | / | .. | / | / | / | '' / .. * / and / < / mod / > - / | / | node ( ) // parent :: processing-instruction ( '' ) / preceding :: node ( ) / .. div / mod / + - - $ ï.- : node [ / - / < / + / > / and / + / + / - / + / < / + / = / + / + / < / >= / + / != / - / <= / > / + / + / > / != / - / + / - / + / != / + / = / + / = / < / + / + / - / - / - / - / and / + / < / - / + / > / = / + / + / != / <= / + / + / + / + / + / > / <= / + / < / <= / >= / - / + / <= / - / + / != / > / + / and / <= / or / - / - / != / - / > / + / != / + / > / - / + / + / = / + / = / < / <= / - / + / = / - / < / + / >= / - / != / - / <= / + / = / > / = / - / - / and / - / + / + / ] | / | / | / | processing-instruction ( "" ) | . / .. / .. | 'q' / .. / . + - // attribute : attribute // . // self :: processing-instruction ( '' ) - / > / - / and / - / mod / mod / <= - / .. mod - - - / | / | .2 | "(oR" | "" | '' * / or / mod - / | / . // following :: processing-instruction ( "^" ) // @ processing-instruction ( 'gy:U`*' ) - / div - Ü. ( ) + / | / | .. mod - "FI" | // namespace :: processing-instruction ( '' ) / self :: processing-instruction ( "" ) / . | / | / | "" / .. / . // namespace :: * | "d" <= / mod / mod / div - text ( ) / attribute :: processing-instruction ( "9" ) // . | / | 458. // text ( ) | 'k/' / .. / . > - - - / | / | / | / | / | / | "t" / .. // . + / | / | / | "<" and / | / | following-sibling : preceding-sibling ( ) / * // .. | '' | / | / | '' = / div / - - $ preceding : self // . | / | processing-instruction ( ) + - - $ ǿ- : text [ / + / + / and / - / or / >= / - / + / + / <= / + / + / + / + / >= / + / - / + / or / <= / + / and / ] [ / < / <= / > / + / or / < / > / <= / - / <= / > / = / + / >= / != / - / - / > / != / > / >= / - / + / > / - / + / - / - / != / != / < / + / < / != / - / = / <= / and / + / > / + / and / + / < / > / - / and / + / >= / + / <= / - / + / = / < / = / - / + / + / + / = / or / and / != / + / = / = / > / = / + / != / + / <= / + / - / - / + / >= / + / >= / >= / - / != / + / < / + / and / + / = / + / + / < / - / = / > / > / <= / + / = / != / + / + / - / > / and / > / - / + / - / + / + / >= / + / < / <= / - / >= / - / - / != / = / - / < / + / > / + / and / - / and / + / - / > / + / + / or / + / - / + / - / - / <= / - / + / + / < / > / >= / or / <= / >= / + / != / = / ] [ / - / > / < / >= / - / > / + / or / ] // .. // .. = / < / mod - .. / comment : preceding-sibling // .. | .. // . and - / | / | / | $ namespace : node / .. / ancestor-or-self :: processing-instruction ( "v*8" ) | / | / | "7" // . + / | / | / | .467 / .. // processing-instruction ( '' ) / preceding :: * * / div / + - / | 6. | 'K' | / | / | .. / .. | "" - / or / - / + ( / + / or / = / < / + / + / + / > / - / >= / >= / and / > / - / > / + / <= / ) [ / or / + / > / <= / != / + / + / ] [ / or / >= / + / and / ] [ / - / + / = / + / and / < / ] | .0 | following-sibling : ﭯ- ( ) + - / | "" / @ * // self :: processing-instruction ( "" ) // ancestor-or-self :: comment ( ) / parent :: * | / | / | .3 // . div // processing-instruction ( "" ) // @ comment ( ) | / | / | / | .. / .. * / mod - - . // .. // preceding :: processing-instruction ( 'H' ) / @ processing-instruction ( '&SJ>' ) | preceding ( ) / preceding :: * / following :: * // * // preceding-sibling :: * mod / div / mod / > / | 둟 ( ) | / | / | "[d" = / mod .. // processing-instruction ( "" ) / namespace :: * * $ preceding : comment / .. // .. * - $ namespace // . / @ node ( ) mod / mod - - - - / | "D" mod / div / + / - / >= - / | // @ processing-instruction ( '' ) / .. | / | / | "" | .. mod - - / | / | . // .. // @ * // comment ( ) | 9 / . | . // . / .. // . // . / .. = - - - - - - ( / - / - / + / - / ) [ / >= / = / < / <= / - / - / and / - / - / + / <= / + / <= / < / > / - / - / + / and / < / ] and ( / >= / - / - / + / - / = / - / - / + / + / != / = / ) + / - - / parent :: * / .. | / | .. // * | / | "" | ";<#*H" / descendant-or-self :: node ( ) | ''`' / . / .. div - .. | . // self :: processing-instruction ( 'yK1PM' ) // .. | / | / | / | "<" * / mod / | / | . // . // .. / .. 