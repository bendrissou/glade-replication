/ - .. and / and / - / + - - - - - - / | .. / descendant :: comment ( ) / child :: node ( ) / descendant : node // .. div / | @ processing-instruction ( '' ) / following :: text ( ) // . / processing-instruction ( '#}' ) // parent :: node ( ) and / processing-instruction ( 'o' ) // . // .. div / mod / | ⷂ· ( ) // processing-instruction ( '' ) mod - / | / | / | '' + / | / | . / . / ancestor-or-self :: processing-instruction ( '>' ) / @ * / . div / - / div - preceding-sibling ( ) | / | / | preceding-sibling :: comment ( ) // . / . // . mod '' | $ text : preceding / . 