/ div / - / div / div / | .. | .3351 | .8 / @ node ( ) | "" - / - / div / | $ Ɛ- : preceding div / > - / | / | / | / | / | 30 / .. + / <= - - node ( ) div / div / = - .1 [ / >= / + / + / + / + / > / + / != / - / - / < / >= / - / + / <= / + / - / = / + / + / - / + / > / + / - / + / or / <= / + / = / + / = / - / + / + / + / + / >= / <= / = / - / = / > / and / + / and / = / <= / + / <= / >= / + / - / - / != / + / >= / = / - / + / - / - / != / + / >= / + / + / = / ] // . div / . | $ 㼶 | / | '&K'' // descendant :: processing-instruction ( "'g," ) / following-sibling :: comment ( ) | / | "w" / .. * / mod / | / | / | "" * / div / and / mod / div / >= - / | / | / | * or / div / > $ comment : À- [ / - / >= / >= / <= / = / - / - / or / - / != / >= / > / + / ] * / | / | / | / | / | '' // .. mod / + - - - - - - - - - .7 [ / and / < / >= / - / and / + / + / or / - / > / >= / ] [ / + / < / < / - / <= / + / >= / - / + / - / > / - / > / and / + / <= / - / > / ] [ / + / = / = / + / + / - / = / - / - / != / - / + / != / or / <= / and / + / != / < / > / - / >= / < / + / + / + / + / < / or / - / != / + / >= / - / != / or / = / or / and / + / >= / - / != / - / - / - / <= / != / - / - / = / - / - / - / - / < / != / + / or / != / + / + / + / and / + / >= / - / <= / + / - / + / - / - / - / = / - / and / - / or / >= / - / + / = / != / <= / - / = / - / > / != / + / - / + / + / >= / - / + / != / - / and / - / < / = / = / > / + / != / = / and / = / - / >= / + / - / + / - / <= / - / + / + / != / <= / + / >= / or / + / and / and / - / + / + / - / - / + / = / - / - / ] [ / + / + / - / < / - / - / < / - / - / + / + / - / >= / >= / - / > / - / + / - / + / + / - / and / != / + / <= / - / + / < / ] [ / < / - / ] | / | / | / | preceding-sibling :: node ( ) / @ processing-instruction ( 'r' ) // ancestor-or-self :: * * - @ processing-instruction ( '2H.C' ) / parent :: text ( ) | / | / | / | / | '' div / - - È ( ) | / | node : 㡱 ( ) | / | / | .10614 // @ text ( ) >= - - / | preceding-sibling :: attribute : processing-instruction | / | / | / | / | "J~" // . // .. mod / mod - / .. / @ node ( ) | / .. // preceding-sibling :: text ( ) // . != / mod "" // . / node ( ) / .. | // .. / preceding :: * / processing-instruction ( ) | / | . / @ processing-instruction ( "" ) | / | '' * '' / .. mod / - / - - / | / | / | / | / | .2 * / and / or - - - - - / descendant :: * // . // @ processing-instruction ( ) | $ preceding-sibling : 﨟̜ // .. < / mod @ text ( ) + / 