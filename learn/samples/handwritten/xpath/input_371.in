/ mod - - - 4 mod / - / mod - text : ⴓ· ( ) // . | . / ancestor :: comment ( ) <= - / | / | $ ⼳6‿̀ : ⹎̟1 / . / attribute : * / . / . | / | / | / | '' + / div / . | / | // .. // preceding :: processing-instruction ( '' ) mod - // following :: processing-instruction ( "n" ) * $ attribute : self - - - / | / . / . | / | / | / | . // .. / . / . / . | "/" / . mod / | $ text | .52 / .. mod / <= - - - - - ( / - / <= / - / + / and / + / - / > / > / - / + / != / + / + / < / or / and / ) [ / - / + / + / = / != / = / ] [ / + / + / + / = / = / + / - / != / = / + / + / + / + / and / = / + / and / = / - / + / < / >= / - / < / < / - / and / - / >= / + / or / - / and / != / - / + / - / + / - / - / >= / + / <= / ] [ / <= / <= / > / and / = / != / > / <= / and / + / < / - / and / != / + / + / = / - / != / + / < / - / and / >= / + / >= / >= / or / < / >= / ] [ / < / or / - / and / > / - / + / > / - / - / <= / ] | / . * child :: processing-instruction ( "" ) / .. | @ descendant-or-self : * // self :: node ( ) / text ( ) / descendant :: processing-instruction ( "" ) | $ ancestor | / . mod - / | / . div / mod preceding ( ) + / div / | / | '' * / 