- - - - - - - - ( / - / or / + / = / = / <= / <= / <= / + / != / >= / + / - / < / ) * / <= / + / and - "" / .. | // descendant-or-self :: processing-instruction ( '}' ) / . / preceding :: * | / | // following :: * div / >= / > / | "M" mod / - - @ processing-instruction ( "" ) // preceding-sibling :: node ( ) // @ comment ( ) // .. / @ processing-instruction ( 'C' ) | 鼜Ӑ·.·· ( ) | / | / | / | / | '-' * / | / | / | / | / | 'T' * / | / self :: processing-instruction ( "" ) / .. * / mod / div / | '' // . <= / != - - // @ processing-instruction ( "" ) // .. mod - - .3 | / | / | / | "" // .. | 'Y' * / | / | / | .. / .. // . | 'n<=' * / | .704 mod / | . / .. | "T}" div - - - .. | "([N" mod "" * / mod / + / | / | ͹ ( ) // processing-instruction ( "x" ) | / | / | 2 / .. | "" * / | Ⰱ ( ) + / and / | / | / | / .. | // . | / | '9' // . / .. div / + / | / | .0 + // .. mod / div - - - .75 | '' * - - / | / | . / .. * - - - - / . / .. // . / . | . / .. / . | 'd"2' * .. // .. | '@*' = ancestor :: text ( ) + / div / | namespace :: namespace : * / @ parent : * and - / | / | / | . | / | / | '[r' // . div / div - / . | .. | namespace :: node ( ) // . / * | / | ";" // . div / div - - / | / | '' // . // .. - / mod / < - / | / | / | // node ( ) / .. | .09 / following-sibling :: * // . > / div / 